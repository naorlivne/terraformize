kind: pipeline
type: docker
name: amd64_build

platform:
  os: linux
  arch: amd64

services:
- name: consul
  image: consul

steps:
- name: install_terraform
  image: alpine:3.10
  commands:
  - wget https://releases.hashicorp.com/terraform/0.12.18/terraform_0.12.18_linux_amd64.zip -O /tmp/terraform_0.12.18_linux_amd64.zip
  - unzip /tmp/terraform_*.zip

- name: run_python_unit_test
  image: python:3.8.0-alpine3.10
  commands:
  - cp terraform /usr/bin/terraform
  - apk add --no-cache build-base libffi-dev
  - pip install -r requirements.txt
  - coverage run -m unittest
  - codecov  --commit=$DRONE_COMMIT_SHA
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token

- name: docker_build_version
  image: plugins/docker
  when:
    event:
      - push
    branch: 
      - master
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: naorlivne/terraformize
    tags:
      - linux-amd64
      - linux-amd64-v${DRONE_BUILD_NUMBER}

- name: run_end2end_tests_terraformize_service
  image: naorlivne/terraformize:linux-amd64-v${DRONE_BUILD_NUMBER}
  detach: true
  when:
    event:
      - push
    branch:
      - master
  environment:
    TERRAFORM_MODULES_PATH: "/www/test/test_terraform"

- name: run_end2end_tests
  image: alpine:3.10
  when:
    event:
      - push
    branch:
      - master
  commands:
  - apk add --no-cache curl
  - sh test/end2end_tests.sh

---
kind: pipeline
type: docker
name: arm_build

platform:
  os: linux
  arch: arm

services:
- name: consul
  image: consul

steps:
- name: install_terraform
  image: alpine:3.10
  commands:
    - wget https://releases.hashicorp.com/terraform/0.12.18/terraform_0.12.18_linux_arm.zip -O /tmp/terraform_0.12.18_linux_arm.zip
    - unzip /tmp/terraform_*.zip

- name: run_python_unit_test
  image: python:3.8.0-alpine3.10
  commands:
  - cp terraform /usr/bin/terraform
  - apk add --no-cache build-base libffi-dev
  - pip install -r requirements.txt
  - coverage run -m unittest
  - codecov  --commit=$DRONE_COMMIT_SHA
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token

- name: docker_build_version
  image: plugins/docker
  when:
    event:
      - push
    branch: 
      - master
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    repo: naorlivne/terraformize
    tags:
      - linux-arm
      - linux-arm-v${DRONE_BUILD_NUMBER}
    dockerfile: Dockerfile-arm

- name: run_end2end_tests_terraformize_service
  image: naorlivne/terraformize:linux-arm-v${DRONE_BUILD_NUMBER}
  detach: true
  when:
    event:
      - push
    branch:
      - master
  environment:
    TERRAFORM_MODULES_PATH: "/www/test/test_terraform"

- name: run_end2end_tests
  image: alpine:3.10
  when:
    event:
      - push
    branch:
      - master
  commands:
  - apk add --no-cache curl
  - sh test/end2end_tests.sh

---
kind: pipeline
type: docker
name: publish_docker_manifest

trigger:
  event:
  - push
  branch:
  - master

steps:
- name: manifest
  image: plugins/manifest
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    target:  naorlivne/terraformize
    template: naorlivne/terraformize:OS-ARCH
    platforms:
      - linux/amd64
      - linux/arm

depends_on:
- amd64_build
- arm_build

---
kind: pipeline
type: docker
name: publish_docker_manifest_version

trigger:
  event:
  - push
  branch:
  - master

steps:
- name: manifest
  image: plugins/manifest
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    target:  naorlivne/terraformize:v${DRONE_BUILD_NUMBER}
    template: naorlivne/terraformize:OS-ARCH-v${DRONE_BUILD_NUMBER}
    platforms:
      - linux/amd64
      - linux/arm

depends_on:
- amd64_build
- arm_build

---
kind: pipeline
type: docker
name: publish_changelog

trigger:
  event:
  - push
  branch:
  - master

steps:
- name: create_changelog
  image: naorlivne/drone-github-changelog-generator
  settings:
    github_user: ${DRONE_REPO_NAMESPACE}
    github_project: ${DRONE_REPO_NAME}
    output_path: CHANGELOG.md

depends_on:
- amd64_build
- arm_build

---

kind: pipeline
type: docker
name: notify

steps:
- name: notify
  image: drillster/drone-email
  settings:
    host: aspmx.l.google.com
    port: 25
    from: dronealert@dronealert.com
    recipients: [ naorlivne@gmail.com ]
    recipients_only: true

trigger:
  status:
  - failure

depends_on:
- publish_docker_manifest
- publish_docker_manifest_version
- publish_changelog
